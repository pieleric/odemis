# Simulator of the SECOM special for simulating the focus
SimSECOM: {
    class: Microscope,
    role: secom,
    children: [Spectra, "Nikon Super Duper", "MultiBand Fixed Filter", "EBeam ExtXY",
               "SimCam", "SED ExtXY", "EBeam Focus",
               "OLStage", "SEM-Optical Alignment", "OpticalZ actuator"],
}

Spectra: {
    class: lle.FakeLLE,
    role: light,
    init: {
        port: "/dev/ttyLLE",
        # source name -> 99% low, 25% low, centre, 25% high, 99% high wavelength in m
        sources: {"red": [615.e-9, 625.e-9, 633.e-9, 640.e-9, 650.e-9],
                  "green": [525.e-9, 540.e-9, 550.e-9, 555.e-9, 560.e-9],
                  "cyan": [455.e-9, 465.e-9, 475.e-9, 485.e-9, 495.e-9],
                  "UV": [375.e-9, 390.e-9, 400.e-9, 402.e-9, 405.e-9],
                  "yellow": [565.e-9, 570.e-9, 575.e-9, 580.e-9, 595.e-9],
                  "blue": [420.e-9, 430.e-9, 438.e-9, 445.e-9, 455.e-9],
                  "teal": [495.e-9, 505.e-9, 513.e-9, 520.e-9, 530.e-9],
                 }
        },
    affects: ["SimCam"],
}

"SEM ExtXY": {
    class: simsem.SimSEM,
    role: null,
    init: {
           image: "songbird-sim-sem.h5", # any large 16 bit image is fine
#           drift_period: 5, # s, comment out to disable drift
    },
    children: {scanner: "EBeam ExtXY",
               detector0: "SED ExtXY",
               focus: "EBeam Focus",
    }
}

"EBeam ExtXY": {
    # Internal child of SimSEM, so no class
    role: e-beam,
    init: {},
    properties: {
        dwellTime: 10.e-6, # s
    },
    affects: ["SED ExtXY", "Andor SimCam"] # affects the CCD in case of cathodoluminescence
}

"SED ExtXY": { # aka ETD
    # Internal child of SimSEM, so no class
    role: se-detector,
    # hard-corded: good focus level is at 0.1 (default pos)
    init: {},
}

"EBeam Focus": {
    # Internal child of SimSEM, so no class
    role: ebeam-focus,
}

"Nikon Super Duper": {
    class: static.OpticalLens,
    role: lens,
    init: {
       mag: 60.0, # ratio
       na: 0.95, # ratio, numerical aperture
       ri: 1.0, # ratio, refractive index
    },
    affects: ["SimCam"]
}

"MultiBand Fixed Filter": {
    class: static.LightFilter,
    role: filter,
    init: {band: [[420.e-9, 460.e-9],
                  [510.e-9, 532.e-9], 
                  [590.e-9, 624.e-9],
                  [677.e-9, 723.e-9]]}, # m,m
    affects: ["SimCam"]
}


# Axes: X is horizontal on screen (going left->right), physical: far->close when looking at the door
#       Y is vertical on screen (going bottom->top), physical: left->right when looking at the door
"SimCam": {
    class: simcam.Camera,
    role: ccd,
    init: {image: "andorcam2-fake-clara.tiff",
           #image: "andorcam2-fake-spots.h5", # 7x7 grid
    },
    children: {focus: "OpticalZ actuator"}
}

# Axis Z: (Physical) bottom->top when looking at the door
#         (On screen) bottom->top (so distance to sample is smaller when going up)    
"OpticalZ actuator": {
    role: focus,
    # hard-coded: good focus level is at 0.006 (default pos)
    affects: ["SimCam"],
}

"OLStage": {
    class: simulated.Stage,
    role: stage,
    init: {axes: [x, y]},
    affects: ["SimCam", "EBeam ExtXY"],
    properties: {
        speed: {x: 0.1, y: 0.1} #m/s
    }
}

# Use 2 MultiplexActuators to separate the axes of the PIGCS over different roles
"SEM-Optical Alignment": {
    class: actuator.MultiplexActuator,
    role: align,
    affects: ["SimCam"],
    children: {"a": PIGCS, "b": PIGCS},
    init: {
        axes_map: {"a": "a", "b": "b"},
#        inverted: ["a"]
    },
    properties: {
        speed: {'a': 0.001, 'b': 0.001} #m/s
    }
}


# USB should be connected to a E-861 or C-867
# PI E-861/C-867 jumpers (. = off):
# A = 1234.6..
# B = 123..6..
# Z = 12.4.6..

PIGCS: {
    class: pigcs.FakeBus,
    role: null,
    init: {
        port: "/dev/ttyPIGCS",
        # axis -> controller, channel, closed-loop?
        axes: {"a": [1, 1, False], "b": [2, 1, False], "z": [3, 1, False]},
    },
}


